name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Tauri-Test ${{ needs.create-release.outputs.APP_VERSION }}
          draft: true
          prerelease: false

  build-app:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "pnpm"

      - name: Install app dependencies and build web
        run: pnpm install --frozen-lockfile

      - name: Build the app
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: Tauri-Test ${{ needs.create-release.outputs.APP_VERSION }}
          releaseBody: ""
          releaseDraft: true
          prerelease: false

      - name: Get asset path
        id: asset
        run: |
          echo "::set-output name=path::$(find . -name '*.exe' -o -name '*.dmg' -o -name '*.deb' -o -name '*.rpm' -o -name '*.AppImage' | head -n 1)"

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ steps.asset.outputs.path }}
          asset_name: MyApp
          asset_content_type: application/octet-stream
